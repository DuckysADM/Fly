local function setupFly()
    local plr = game.Players.LocalPlayer
    local mouse = plr:GetMouse()

    -- Cleanup if there's a previous "Core"
    if workspace:FindFirstChild("Core") then
        workspace.Core:Destroy()
    end

    -- Reset flying state if it's already active
    if _G.FlyConnections then
        for _, conn in pairs(_G.FlyConnections) do
            conn:Disconnect()
        end
    end

    _G.FlyConnections = {}

    -- Function to setup core part for flying
    local function setupCore()
        if workspace:FindFirstChild("Core") then
            workspace.Core:Destroy()
        end

        local Core = Instance.new("Part")
        Core.Name = "Core"
        Core.Size = Vector3.new(0.05, 0.05, 0.05)
        Core.Parent = workspace

        local Weld = Instance.new("Weld", Core)
        Weld.Part0 = Core
        Weld.Part1 = plr.Character:WaitForChild("LowerTorso")
        Weld.C0 = CFrame.new(0, 0, 0)

        return Core
    end

    local torso
    local flying = false
    local defaultSpeed = 20
    local speed = defaultSpeed
    local keys = { a = false, d = false, w = false, s = false }

    local function startFlying()
        local pos = Instance.new("BodyPosition", torso)
        local gyro = Instance.new("BodyGyro", torso)
        pos.Name = "EPIXPOS"
        pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
        pos.position = torso.Position
        gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        gyro.cframe = torso.CFrame

        repeat
            task.wait()
            plr.Character.Humanoid.PlatformStand = true
            local new = gyro.cframe - gyro.cframe.p + pos.position

            if not keys.w and not keys.s and not keys.a and not keys.d then
                speed = 5
            else
                speed = defaultSpeed
            end

            if keys.w then
                new = new + workspace.CurrentCamera.CFrame.lookVector * speed
            end
            if keys.s then
                new = new - workspace.CurrentCamera.CFrame.lookVector * speed
            end
            if keys.d then
                new = new * CFrame.new(speed, 0, 0)
            end
            if keys.a then
                new = new * CFrame.new(-speed, 0, 0)
            end

            pos.position = new.p
            gyro.cframe = workspace.CurrentCamera.CFrame
        until not flying

        pos:Destroy()
        gyro:Destroy()
        flying = false
        plr.Character.Humanoid.PlatformStand = false
    end

    local function setupControls()
        local e1 = mouse.KeyDown:Connect(function(key)
            if key == "w" then keys.w = true end
            if key == "s" then keys.s = true end
            if key == "a" then keys.a = true end
            if key == "d" then keys.d = true end
            if key == "x" then
                flying = not flying
                if flying then startFlying() end
            end
        end)

        local e2 = mouse.KeyUp:Connect(function(key)
            if key == "w" then keys.w = false end
            if key == "s" then keys.s = false end
            if key == "a" then keys.a = false end
            if key == "d" then keys.d = false end
        end)

        table.insert(_G.FlyConnections, e1)
        table.insert(_G.FlyConnections, e2)
    end

    torso = setupCore()
    setupControls()
end

-- Listen for player respawn
game.Players.LocalPlayer.CharacterAdded:Connect(function()
    -- Reset the flying setup when the player respawns
    setupFly()
end)

-- Initialize fly controls for the first time
setupFly()
